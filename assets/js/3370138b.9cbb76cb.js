"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5878],{5404:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(6672);const r={},s=t.createContext(r);function l(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}},9439:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api_reference/builders/put-item-builder","title":"PutItem Request Builder","description":"Overview","source":"@site/docs/api_reference/builders/put-item-builder.md","sourceDirName":"api_reference/builders","slug":"/api-reference/builders/put-item","permalink":"/EfficientDynamoDb/docs/api-reference/builders/put-item","draft":false,"unlisted":false,"editUrl":"https://github.com/alloczero/EfficientDynamoDb/edit/main/website/docs/api_reference/builders/put-item-builder.md","tags":[],"version":"current","frontMatter":{"id":"put-item-builder","title":"PutItem Request Builder","sidebar_label":"PutItem","slug":"../../api-reference/builders/put-item"},"sidebar":"someSidebar","previous":{"title":"GetItem","permalink":"/EfficientDynamoDb/docs/api-reference/builders/get-item"},"next":{"title":"DeleteItem","permalink":"/EfficientDynamoDb/docs/api-reference/builders/delete-item"}}');var r=i(3420),s=i(5404);const l={id:"put-item-builder",title:"PutItem Request Builder",sidebar_label:"PutItem",slug:"../../api-reference/builders/put-item"},a=void 0,c={},d=[{value:"Overview",id:"overview",level:2},{value:"PutItem General Configuration",id:"putitem-general-configuration",level:2},{value:"WithReturnValues",id:"withreturnvalues",level:3},{value:"Parameters",id:"withreturnvalues-parameters",level:4},{value:"Example",id:"withreturnvalues-example",level:4},{value:"WithReturnConsumedCapacity",id:"withreturnconsumedcapacity",level:3},{value:"Parameters",id:"withreturnconsumedcapacity-parameters",level:4},{value:"Example",id:"withreturnconsumedcapacity-example",level:4},{value:"WithReturnValuesOnConditionCheckFailure",id:"withreturnvaluesonconditioncheckfailure",level:3},{value:"Parameters",id:"withreturnvaluesonconditioncheckfailure-parameters",level:4},{value:"Example",id:"withreturnvaluesonconditioncheckfailure-example",level:4},{value:"WithCondition (Explicit condition)",id:"withcondition",level:3},{value:"Parameters",id:"withcondition-parameters",level:4},{value:"Example",id:"withcondition-example",level:4},{value:"WithItem",id:"withitem",level:3},{value:"Parameters",id:"withitem-parameters",level:4},{value:"Example",id:"withitem-example",level:4},{value:"PutItem Entity Configuration",id:"putitem-entity-configuration",level:2},{value:"WithCondition (Function condition)",id:"withcondition-func",level:3},{value:"Parameters",id:"withcondition-func-parameters",level:4},{value:"Example",id:"withcondition-func-example",level:4},{value:"AsDocument",id:"asdocument",level:3},{value:"Example",id:"asdocument-example",level:4},{value:"SuppressThrowing",id:"suppressthrowing",level:3},{value:"Example",id:"suppressthrowing-example",level:4},{value:"PutItem Execution",id:"putitem-execution",level:2},{value:"ExecuteAsync",id:"execute",level:3},{value:"Parameters",id:"execute-parameters",level:4},{value:"Example",id:"execute-example",level:4},{value:"ToItemAsync",id:"toitem",level:3},{value:"Parameters",id:"toitem-parameters",level:4},{value:"Example",id:"toitem-example",level:4},{value:"ToResponseAsync",id:"toresponse",level:3},{value:"Example",id:"toresponse-example",level:4}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["This section describes the EfficientDynamoDb API for building the ",(0,r.jsx)(n.code,{children:"PutItem"})," request."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"IPutItemRequestBuilder"})," interface provides a builder pattern for constructing a ",(0,r.jsx)(n.code,{children:"PutItem"})," operation in DynamoDB."]}),"\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.code,{children:"DynamoDbContext.PutItem()"})," method to get the builder:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"var builder = ddbContext.PutItem();\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For the ",(0,r.jsx)(n.code,{children:"PutItem"})," request you only required to item to save using the ",(0,r.jsx)(n.code,{children:"WithItem"})," method.\nAll other builder methods are optional and can be omitted.\nIn this case, DynamoDB will use the default behavior."]}),"\n",(0,r.jsx)(n.h2,{id:"putitem-general-configuration",children:"PutItem General Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The following configuration methods are available at every step of the PutItem request configuration, even before specifying the item to save."}),"\n",(0,r.jsx)(n.h3,{id:"withreturnvalues",children:"WithReturnValues"}),"\n",(0,r.jsx)(n.p,{children:"Specifies the attributes to include in the response."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"IPutItemRequestBuilder WithReturnValues(ReturnValues returnValues);\n"})}),"\n",(0,r.jsx)(n.p,{children:"If not specified, no values are returned in the response."}),"\n",(0,r.jsx)(n.h4,{id:"withreturnvalues-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"returnValues"}),": ",(0,r.jsx)(n.a,{href:"/EfficientDynamoDb/docs/api-reference/options/return-values",children:"ReturnValues"})," enum option.\nOnly ",(0,r.jsx)(n.code,{children:"ReturnValues.None"})," and ",(0,r.jsx)(n.code,{children:"ReturnValues.AllOld"})," are valid for PutItem operation.\nPassing ",(0,r.jsx)(n.code,{children:"ReturnValues.None"})," is equivalent to not using the ",(0,r.jsx)(n.code,{children:"WithReturnValues"})," method at all."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"withreturnvalues-example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"builder = builder.WithReturnValues(ReturnValues.AllOld);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"withreturnconsumedcapacity",children:"WithReturnConsumedCapacity"}),"\n",(0,r.jsx)(n.p,{children:"Specifies the consumed capacity details to include in the response."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"IPutItemRequestBuilder WithReturnConsumedCapacity(ReturnConsumedCapacity returnConsumedCapacity);\n"})}),"\n",(0,r.jsx)(n.p,{children:"If not specified, no consumed capacity info is returned in the response."}),"\n",(0,r.jsx)(n.h4,{id:"withreturnconsumedcapacity-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"returnConsumedCapacity"}),": The type of consumed capacity information to return.\nSetting it to ",(0,r.jsx)(n.code,{children:"ReturnConsumedCapacity.None"})," is equivalent to not using the ",(0,r.jsx)(n.code,{children:"ReturnConsumedCapacity()"})," method at all."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"withreturnconsumedcapacity-example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"builder = builder.WithReturnConsumedCapacity(ReturnConsumedCapacity.Total);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"withreturnvaluesonconditioncheckfailure",children:"WithReturnValuesOnConditionCheckFailure"}),"\n",(0,r.jsx)(n.p,{children:"Specifies how to handle return values if the operation fails."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"IPutItemRequestBuilder WithReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure option);\n"})}),"\n",(0,r.jsx)(n.p,{children:"If not specified, no values are returned in case of condition check failure."}),"\n",(0,r.jsx)(n.h4,{id:"withreturnvaluesonconditioncheckfailure-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"option"}),": Option for handling return values on condition check failure."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"withreturnvaluesonconditioncheckfailure-example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"builder = builder.WithReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure.AllOld);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"withcondition",children:"WithCondition (Explicit condition)"}),"\n",(0,r.jsx)(n.p,{children:"Specifies condition for the PutItem operation."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"IPutItemRequestBuilder WithCondition(FilterBase condition);\n"})}),"\n",(0,r.jsx)(n.h4,{id:"withcondition-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"condition"}),": The condition that is used to determine whether the PutItem operation should succeed or fail.\nRefer to our ",(0,r.jsx)(n.a,{href:"/EfficientDynamoDb/docs/dev-guide/high-level/conditions",children:"condition expression building guide"})," to learn how to build a condition in EfficientDynamoDb."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"withcondition-example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"var expr = Condition<EntityClass>.On(item => item.Pk).NotExists();\nbuilder = builder.WithCondition(expr);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"withitem",children:"WithItem"}),"\n",(0,r.jsx)(n.p,{children:"Specifies the item to save."}),"\n",(0,r.jsxs)(n.p,{children:["This method returns a different type of the builder (",(0,r.jsx)(n.a,{href:"#putitem-entity-configuration",children:"entity builder"})," covered below) to preserve the projection type.\nAdditionally, this entity builder provides more configuration methods that require knowledge about the item type."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"IPutItemEntityRequestBuilder<TEntity> WithItem<TEntity>(TEntity item) where TEntity : class;\n"})}),"\n",(0,r.jsx)(n.h4,{id:"withitem-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"item"}),": The item to save."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"withitem-example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"var entityBuilder = builder.WithItem(new EntityClass());\n"})}),"\n",(0,r.jsx)(n.h2,{id:"putitem-entity-configuration",children:"PutItem Entity Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["This section covers all the additional configuration methods provided in ",(0,r.jsx)(n.code,{children:"IPutItemEntityRequestBuilder<TEntity>"})," that you get after specifying the item to save using ",(0,r.jsx)(n.code,{children:"WithItem"})," method."]}),"\n",(0,r.jsx)(n.h3,{id:"withcondition-func",children:"WithCondition (Function condition)"}),"\n",(0,r.jsx)(n.p,{children:"Specifies the condition function for the PutItem operation."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"IPutItemEntityRequestBuilder<TEntity> WithCondition(Func<EntityFilter<TEntity>, FilterBase> conditionSetup);\n"})}),"\n",(0,r.jsx)(n.h4,{id:"withcondition-func-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"conditionSetup"}),": The condition function that is used to determine whether the PutItem operation should succeed or fail.\nRefer to our ",(0,r.jsx)(n.a,{href:"/EfficientDynamoDb/docs/dev-guide/high-level/conditions",children:"condition expression building guide"})," to learn how to build a condition in EfficientDynamoDb."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"withcondition-func-example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"builder = builder.WithCondition(\n    cond => cond.On(item => item.Pk).NotExists()\n);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"asdocument",children:"AsDocument"}),"\n",(0,r.jsxs)(n.p,{children:["Represents the returned item as a ",(0,r.jsx)(n.code,{children:"Document"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"This method changes the type of the builder."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"IPutItemDocumentRequestBuilder<TEntity> AsDocument();\n"})}),"\n",(0,r.jsx)(n.h4,{id:"asdocument-example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"var documentBuilder = builder.AsDocument();\n"})}),"\n",(0,r.jsxs)(n.p,{children:["After execution, this ",(0,r.jsx)(n.code,{children:"PutItem"})," request will return the ",(0,r.jsx)(n.code,{children:"Document"})," instead of the original entity of the builder."]}),"\n",(0,r.jsx)(n.h3,{id:"suppressthrowing",children:"SuppressThrowing"}),"\n",(0,r.jsxs)(n.p,{children:["Prevents the ",(0,r.jsx)(n.code,{children:"PutItem"})," operation from throwing an exception in case of any failure. Instead, the execution methods will return an ",(0,r.jsx)(n.code,{children:"OpResult"})," or ",(0,r.jsx)(n.code,{children:"OpResult<T>"})," that encapsulates either a successful result or an error."]}),"\n",(0,r.jsx)(n.p,{children:"This method returns a different type of the builder to indicate that exception suppression is active."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"ISuppressedPutItemEntityRequestBuilder<TEntity> SuppressThrowing();\n"})}),"\n",(0,r.jsx)(n.h4,{id:"suppressthrowing-example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"var result = await builder.SuppressThrowing().ExecuteAsync();\nif (result.IsSuccess)\n{\n    // Handle successful execution.\n\n}\nelse\n{\n    var exception = result.Exception;\n    // Handle error.\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"putitem-execution",children:"PutItem Execution"}),"\n",(0,r.jsx)(n.p,{children:"There are 2 versions of every query execution method: regular and document.\nAll versions have same parameters, the only difference is entity type returned value:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["In most cases, the original entity ",(0,r.jsx)(n.code,{children:"TEntity"})," is returned."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"AsDocuments()"})," was used, the execution method will contain the entity type of ",(0,r.jsx)(n.code,{children:"Document"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"SuppressThrowing()"})," was used, the execution method will return an ",(0,r.jsx)(n.code,{children:"OpResult<T>"})," where ",(0,r.jsx)(n.code,{children:"T"})," is one of the types above."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For simplicity, this document covers only regular version of execution methods."}),"\n",(0,r.jsx)(n.h3,{id:"execute",children:"ExecuteAsync"}),"\n",(0,r.jsx)(n.p,{children:"Executes the PutItem operation."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"Task ExecuteAsync(CancellationToken cancellationToken = default);\n"})}),"\n",(0,r.jsx)(n.h4,{id:"execute-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cancellationToken"}),": Token that can be used to cancel the task."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"execute-example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"await builder.ExecuteAsync();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"toitem",children:"ToItemAsync"}),"\n",(0,r.jsx)(n.p,{children:"Executes the PutItem operation and returns the item before the update."}),"\n",(0,r.jsxs)(n.p,{children:["The item is returned as it appeared before the PutItem operation, but only if ",(0,r.jsx)(n.a,{href:"#withreturnvalues",children:(0,r.jsx)(n.code,{children:"WithReturnValues"})})," with ",(0,r.jsx)(n.code,{children:"ReturnValues.AllOld"})," was specified in the request chain.\nOtherwise, ",(0,r.jsx)(n.code,{children:"null"})," is returned."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"Task<TEntity?> ToItemAsync(CancellationToken cancellationToken = default);\n"})}),"\n",(0,r.jsx)(n.h4,{id:"toitem-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cancellationToken"}),": Token that can be used to cancel the task."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"toitem-example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"var item = await builder.ToItemAsync();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"toresponse",children:"ToResponseAsync"}),"\n",(0,r.jsxs)(n.p,{children:["Executes the PutItem operation and returns the deserialized response.\nBesides the item, this response contains ",(0,r.jsx)(n.code,{children:"ConsumedCapacity"})," property if ",(0,r.jsx)(n.a,{href:"#withreturnconsumedcapacity",children:(0,r.jsx)(n.code,{children:"WithReturnConsumedCapacity"})})," was used."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"Task<PutItemEntityResponse<TEntity>> ToResponseAsync(CancellationToken cancellationToken = default);\n"})}),"\n",(0,r.jsx)(n.h4,{id:"toresponse-example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"var response = await builder.ToResponseAsync();\nvar item = response.Item;\nvar consumedCapacity = response.ConsumedCapacity;\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);