"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[708],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),g=r,m=p["".concat(l,".").concat(g)]||p[g]||u[g]||i;return n?a.createElement(m,o(o({ref:t},d),{},{components:n})):a.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},792:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={id:"getting-started",title:"Getting started",slug:"../dev-guide/getting-started"},o=void 0,s={unversionedId:"dev_guide/getting-started",id:"dev_guide/getting-started",title:"Getting started",description:"Installation",source:"@site/docs/dev_guide/getting-started.md",sourceDirName:"dev_guide",slug:"/dev-guide/getting-started",permalink:"/EfficientDynamoDb/docs/dev-guide/getting-started",draft:!1,editUrl:"https://github.com/alloczero/EfficientDynamoDb/edit/main/website/docs/dev_guide/getting-started.md",tags:[],version:"current",frontMatter:{id:"getting-started",title:"Getting started",slug:"../dev-guide/getting-started"},sidebar:"someSidebar",previous:{title:"Design Principles",permalink:"/EfficientDynamoDb/docs/design"},next:{title:"Region management",permalink:"/EfficientDynamoDb/docs/dev_guide/dev-guide/configuration/region-endpoint"}},l={},c=[{value:"Installation",id:"installation",level:2},{value:"Initializing DynamoDbContext",id:"initializing-dynamodbcontext",level:2},{value:"Region",id:"region",level:2},{value:"Credentials",id:"credentials",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"To get started, install the ",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/EfficientDynamoDb"},"EfficientDynamoDb nuget package"),"."),(0,r.kt)("h2",{id:"initializing-dynamodbcontext"},"Initializing DynamoDbContext"),(0,r.kt)("p",null,"All requests to DynamoDB in EfficientDynamoDb are done through ",(0,r.kt)("inlineCode",{parentName:"p"},"DynamoDbContext"),"."),(0,r.kt)("p",null,"First, add the following usings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using EfficientDynamoDb;\nusing EfficientDynamoDb.Configs;\n")),(0,r.kt)("p",null,"Then you can create a ",(0,r.kt)("inlineCode",{parentName:"p"},"DynamoDbContext")," like that:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var accessKey = Environment.GetEnvironmentVariable("accessKeyVariable");\nvar secretKey = Environment.GetEnvironmentVariable("secretKeyVariable");\n\nvar credentials = new AwsCredentials(accessKey, secretKey);\n\nvar config = new DynamoDbContextConfig(RegionEndpoint.USEast1, credentials);\nvar context = new DynamoDbContext(config);\n')),(0,r.kt)("p",null,"As you see, there are two main requirements to create the context: ",(0,r.kt)("inlineCode",{parentName:"p"},"RegionEndpoint")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"AwsCredentials"),"."),(0,r.kt)("p",null,"Optionally, you can set the table name prefix, HTTP client factory, and retry strategies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var config = new DynamoDbContextConfig(RegionEndpoint.USEast1, credentials)\n{\n    TableNamePrefix = "your_prefix",\n    HttpClientFactory = yourFactory\n};\nconfig.RetryStrategies.ThrottlingStrategy = DefaultRetryStrategy.Instance;\n')),(0,r.kt)("p",null,"For more info about retry strategies and possible options, check the ",(0,r.kt)("a",{parentName:"p",href:"/EfficientDynamoDb/docs/dev_guide/dev-guide/configuration/retry-strategies"},"retry strategies guide"),"."),(0,r.kt)("h2",{id:"region"},"Region"),(0,r.kt)("p",null,"AWS Region selection allows you to access DynamoDb in a specific geographic region.\nIt can be useful for redundancy and to keep your data and applications running close to where you and your users access them."),(0,r.kt)("p",null,"The simplest way to get ",(0,r.kt)("inlineCode",{parentName:"p"},"RegionEndpoint")," is to use static property like ",(0,r.kt)("inlineCode",{parentName:"p"},"RegionEndpoint.USEast1"),".\nLearn more about ways to create ",(0,r.kt)("inlineCode",{parentName:"p"},"RegionEndpoint")," in our ",(0,r.kt)("a",{parentName:"p",href:"/EfficientDynamoDb/docs/dev_guide/dev-guide/configuration/region-endpoint"},"how-to guide"),"."),(0,r.kt)("h2",{id:"credentials"},"Credentials"),(0,r.kt)("p",null,"Natively, EfficientDynamoDb supports direct creation of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AllocZero/EfficientDynamoDb/blob/main/src/EfficientDynamoDb/Configs/AwsCredentials.cs"},"AwsCredentials")," instance via constructor."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Important note:")," Never put your credentials as plain text in your code! Use some secure storage instead."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var accessKey = Environment.GetEnvironmentVariable("accessKeyVariable");\nvar secretKey = Environment.GetEnvironmentVariable("secretKeyVariable");\n\nvar credentials = new AwsCredentials(accessKey, secretKey);\n')),(0,r.kt)("p",null,"If you want to use token authentication, you can pass it to the ",(0,r.kt)("inlineCode",{parentName:"p"},"AwsCredentials")," constructor as well:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var accessKey = Environment.GetEnvironmentVariable("accessKeyVariable");\nvar secretKey = Environment.GetEnvironmentVariable("secretKeyVariable");\nvar token = "YourToken";\n\nvar credentials = new AwsCredentials(accessKey, secretKey, token);\n')),(0,r.kt)("p",null,"Additionally, you can use all authentication methods from .NET AWS SDK via our ",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/EfficientDynamoDb.Credentials.AWSSDK/"},"credentials compatibility package"),"."),(0,r.kt)("p",null,"For more info, refer to our guide to ",(0,r.kt)("a",{parentName:"p",href:"/EfficientDynamoDb/docs/dev_guide/dev-guide/configuration/credentials"},"credentials management in EfficientDynamoDb")))}u.isMDXComponent=!0}}]);