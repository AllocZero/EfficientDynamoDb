"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4744],{1215:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"api_reference/builders/delete-item-builder","title":"DeleteItem Request Builder","description":"Overview","source":"@site/docs/api_reference/builders/delete-item-builder.md","sourceDirName":"api_reference/builders","slug":"/api-reference/builders/delete-item","permalink":"/EfficientDynamoDb/docs/api-reference/builders/delete-item","draft":false,"unlisted":false,"editUrl":"https://github.com/alloczero/EfficientDynamoDb/edit/main/website/docs/api_reference/builders/delete-item-builder.md","tags":[],"version":"current","frontMatter":{"id":"delete-item-builder","title":"DeleteItem Request Builder","sidebar_label":"DeleteItem","slug":"../../api-reference/builders/delete-item"},"sidebar":"someSidebar","previous":{"title":"PutItem","permalink":"/EfficientDynamoDb/docs/api-reference/builders/put-item"},"next":{"title":"UpdateItem","permalink":"/EfficientDynamoDb/docs/api-reference/builders/update-item"}}');var r=n(3420),l=n(5404);const s={id:"delete-item-builder",title:"DeleteItem Request Builder",sidebar_label:"DeleteItem",slug:"../../api-reference/builders/delete-item"},a=void 0,d={},c=[{value:"Overview",id:"overview",level:2},{value:"DeleteItem Configuration",id:"deleteitem-configuration",level:2},{value:"WithPrimaryKey (with only Partition key)",id:"withprimarykey-pk",level:3},{value:"Parameters",id:"withprimarykey-pk-parameters",level:4},{value:"Example",id:"withprimarykey-pk-example",level:4},{value:"WithPrimaryKey (with both Partition and Sort keys)",id:"withprimarykey-pk-sk",level:3},{value:"Parameters",id:"withprimarykey-pk-sk-parameters",level:4},{value:"Example",id:"withprimarykey-pk-sk-example",level:4},{value:"WithCondition (Explicit condition)",id:"withcondition",level:3},{value:"Parameters",id:"withcondition-parameters",level:4},{value:"Example",id:"withcondition-example",level:4},{value:"WithCondition (Function condition)",id:"withcondition-func",level:3},{value:"Parameters",id:"withcondition-func-parameters",level:4},{value:"Example",id:"withcondition-func-example",level:4},{value:"WithReturnValues",id:"withreturnvalues",level:3},{value:"Parameters",id:"withreturnvalues-parameters",level:4},{value:"Example",id:"withreturnvalues-example",level:4},{value:"WithReturnValuesOnConditionCheckFailure",id:"withreturnvaluesonconditioncheckfailure",level:3},{value:"Parameters",id:"withreturnvaluesonconditioncheckfailure-parameters",level:4},{value:"Example",id:"withreturnvaluesonconditioncheckfailure-example",level:4},{value:"WithReturnConsumedCapacity",id:"withreturnconsumedcapacity",level:3},{value:"Parameters",id:"withreturnconsumedcapacity-parameters",level:4},{value:"Example",id:"withreturnconsumedcapacity-example",level:4},{value:"AsDocument",id:"asdocument",level:3},{value:"Example",id:"asdocument-example",level:4},{value:"DeleteItem Execution",id:"deleteitem-execution",level:2},{value:"ExecuteAsync",id:"execute",level:3},{value:"Parameters",id:"execute-parameters",level:4},{value:"Example",id:"execute-example",level:4},{value:"ToItemAsync",id:"toitem",level:3},{value:"Parameters",id:"toitem-parameters",level:4},{value:"Example",id:"toitem-example",level:4},{value:"ToResponseAsync",id:"toresponse",level:3},{value:"Example",id:"toresponse-example",level:4}];function o(e){const i={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(i.p,{children:["This section describes the EfficientDynamoDb API for building the ",(0,r.jsx)(i.code,{children:"DeleteItem"})," request."]}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"IDeleteItemEntityRequestBuilder<TEntity>"})," interface provides a builder pattern for constructing a ",(0,r.jsx)(i.code,{children:"DeleteItem"})," operation in DynamoDB.\nIt is designed to work with a database entity of type ",(0,r.jsx)(i.code,{children:"TEntity"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:["Use the ",(0,r.jsx)(i.code,{children:"DynamoDbContext.DeleteItem()"})," method to get the builder:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"var builder = ddbContext.DeleteItem();\n"})}),"\n",(0,r.jsxs)(i.p,{children:["For the ",(0,r.jsx)(i.code,{children:"DeleteItem"})," request you only required to specify primary key using the ",(0,r.jsx)(i.code,{children:"WithPrimaryKey"})," method.\nAll other builder methods are optional and can be omitted.\nIn this case, DynamoDB will use the default behavior."]}),"\n",(0,r.jsx)(i.h2,{id:"deleteitem-configuration",children:"DeleteItem Configuration"}),"\n",(0,r.jsx)(i.h3,{id:"withprimarykey-pk",children:"WithPrimaryKey (with only Partition key)"}),"\n",(0,r.jsx)(i.p,{children:"Specifies the partition key of the item to delete."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"IDeleteItemEntityRequestBuilder<TEntity> WithPrimaryKey<TPk>(TPk pk);\n"})}),"\n",(0,r.jsx)(i.admonition,{type:"info",children:(0,r.jsx)(i.p,{children:"It is required to specify the primary key for every DeleteItem request."})}),"\n",(0,r.jsx)(i.admonition,{type:"caution",children:(0,r.jsxs)(i.p,{children:["Use this method if the table has only a partition key. If the table has both partition and sort keys, use ",(0,r.jsx)(i.a,{href:"#withprimarykey-pk-sk",children:(0,r.jsx)(i.code,{children:"WithPrimaryKey<TPk, TSk>"})})," instead."]})}),"\n",(0,r.jsx)(i.h4,{id:"withprimarykey-pk-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"pk"}),": The partition key of the item."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"withprimarykey-pk-example",children:"Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:'builder = builder.WithPrimaryKey("partitionKey");\n'})}),"\n",(0,r.jsx)(i.h3,{id:"withprimarykey-pk-sk",children:"WithPrimaryKey (with both Partition and Sort keys)"}),"\n",(0,r.jsx)(i.p,{children:"Specifies the partition and sort keys of the item to delete."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"IDeleteItemEntityRequestBuilder<TEntity> WithPrimaryKey<TPk, TSk>(TPk pk, TSk sk);\n"})}),"\n",(0,r.jsx)(i.admonition,{type:"info",children:(0,r.jsx)(i.p,{children:"It is required to specify the primary key for every DeleteItem request."})}),"\n",(0,r.jsx)(i.admonition,{type:"caution",children:(0,r.jsxs)(i.p,{children:["Use this method only if the table has both partition and sort keys.\nIf the table only has a partition key, use ",(0,r.jsx)(i.a,{href:"#withprimarykey-pk",children:(0,r.jsx)(i.code,{children:"WithPrimaryKey<TPk>"})})," instead."]})}),"\n",(0,r.jsx)(i.h4,{id:"withprimarykey-pk-sk-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"pk"}),": The partition key of the item."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"sk"}),": The sort key of the item."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"withprimarykey-pk-sk-example",children:"Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:'builder = builder.WithPrimaryKey("partitionKey", "sortKey");\n'})}),"\n",(0,r.jsx)(i.h3,{id:"withcondition",children:"WithCondition (Explicit condition)"}),"\n",(0,r.jsx)(i.p,{children:"Specifies condition for the DeleteItem operation."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"IDeleteItemEntityRequestBuilder<TEntity> WithCondition(FilterBase condition);\n"})}),"\n",(0,r.jsx)(i.h4,{id:"withcondition-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"condition"}),": The condition that is used to determine whether the DeleteItem operation should succeed or fail.\nRefer to our ",(0,r.jsx)(i.a,{href:"/EfficientDynamoDb/docs/dev-guide/high-level/conditions",children:"condition expression building guide"})," to learn how to build a condition in EfficientDynamoDb."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"withcondition-example",children:"Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:'var expr = Condition<EntityClass>.On(item => item.FirstName).EqualTo("John");\nbuilder = builder.WithCondition(expr);\n'})}),"\n",(0,r.jsx)(i.h3,{id:"withcondition-func",children:"WithCondition (Function condition)"}),"\n",(0,r.jsx)(i.p,{children:"Specifies the condition function for the DeleteItem operation."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"IDeleteItemEntityRequestBuilder<TEntity> WithCondition(Func<EntityFilter<TEntity>, FilterBase> conditionSetup);\n"})}),"\n",(0,r.jsx)(i.h4,{id:"withcondition-func-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"conditionSetup"}),": The condition function that is used to determine whether the DeleteItem operation should succeed or fail.\nRefer to our ",(0,r.jsx)(i.a,{href:"/EfficientDynamoDb/docs/dev-guide/high-level/conditions",children:"condition expression building guide"})," to learn how to build a condition in EfficientDynamoDb."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"withcondition-func-example",children:"Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:'builder = builder.WithCondition(\n    cond => cond.On(item => item.FirstName).EqualTo("John")\n);\n'})}),"\n",(0,r.jsx)(i.h3,{id:"withreturnvalues",children:"WithReturnValues"}),"\n",(0,r.jsx)(i.p,{children:"Specifies the attributes to include in the response."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"IDeleteItemEntityRequestBuilder<TEntity> WithReturnValues(ReturnValues returnValues);\n"})}),"\n",(0,r.jsx)(i.p,{children:"If not specified, no values are returned in the response."}),"\n",(0,r.jsx)(i.h4,{id:"withreturnvalues-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"returnValues"}),": ",(0,r.jsx)(i.a,{href:"/EfficientDynamoDb/docs/api-reference/options/return-values",children:"ReturnValues"})," enum option.\nOnly ",(0,r.jsx)(i.code,{children:"ReturnValues.None"})," and ",(0,r.jsx)(i.code,{children:"ReturnValues.AllOld"})," are valid for DeleteItem operation.\nPassing ",(0,r.jsx)(i.code,{children:"ReturnValues.None"})," is equivalent to not using the ",(0,r.jsx)(i.code,{children:"WithReturnValues"})," method at all."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"withreturnvalues-example",children:"Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"builder = builder.WithReturnValues(ReturnValues.AllOld);\n"})}),"\n",(0,r.jsx)(i.h3,{id:"withreturnvaluesonconditioncheckfailure",children:"WithReturnValuesOnConditionCheckFailure"}),"\n",(0,r.jsx)(i.p,{children:"Specifies how to handle return values if the operation fails."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"IDeleteItemEntityRequestBuilder<TEntity> WithReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure option)\n"})}),"\n",(0,r.jsx)(i.p,{children:"If not specified, no values are returned in case of condition check failure."}),"\n",(0,r.jsx)(i.h4,{id:"withreturnvaluesonconditioncheckfailure-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"option"}),": Option for handling return values on condition check failure."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"withreturnvaluesonconditioncheckfailure-example",children:"Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"builder = builder.WithReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure.AllOld);\n"})}),"\n",(0,r.jsx)(i.h3,{id:"withreturnconsumedcapacity",children:"WithReturnConsumedCapacity"}),"\n",(0,r.jsx)(i.p,{children:"Specifies the consumed capacity details to include in the response."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"IDeleteItemEntityRequestBuilder<TEntity> WithReturnConsumedCapacity(ReturnConsumedCapacity returnConsumedCapacity);\n"})}),"\n",(0,r.jsx)(i.p,{children:"If not specified, no consumed capacity info is returned in the response."}),"\n",(0,r.jsx)(i.h4,{id:"withreturnconsumedcapacity-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"returnConsumedCapacity"}),": The type of consumed capacity information to return.\nSetting it to ",(0,r.jsx)(i.code,{children:"ReturnConsumedCapacity.None"})," is equivalent to not using the ",(0,r.jsx)(i.code,{children:"ReturnConsumedCapacity()"})," method at all."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"withreturnconsumedcapacity-example",children:"Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"builder = builder.WithReturnConsumedCapacity(ReturnConsumedCapacity.Total);\n"})}),"\n",(0,r.jsx)(i.h3,{id:"asdocument",children:"AsDocument"}),"\n",(0,r.jsxs)(i.p,{children:["Represents the returned item as a ",(0,r.jsx)(i.code,{children:"Document"}),"."]}),"\n",(0,r.jsx)(i.p,{children:"This method changes the type of the builder."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"IDeleteItemDocumentRequestBuilder<TEntity> AsDocument();\n"})}),"\n",(0,r.jsx)(i.h4,{id:"asdocument-example",children:"Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"var documentBuilder = builder.AsDocument();\n"})}),"\n",(0,r.jsxs)(i.p,{children:["After execution, this ",(0,r.jsx)(i.code,{children:"DeleteItem"})," request will return the ",(0,r.jsx)(i.code,{children:"Document"})," instead of the original entity of the builder."]}),"\n",(0,r.jsx)(i.h2,{id:"deleteitem-execution",children:"DeleteItem Execution"}),"\n",(0,r.jsx)(i.p,{children:"There are 2 versions of every query execution method: regular and document.\nAll versions have same parameters, the only difference is entity type returned value:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["In most cases, the original entity ",(0,r.jsx)(i.code,{children:"TEntity"})," is returned."]}),"\n",(0,r.jsxs)(i.li,{children:["If ",(0,r.jsx)(i.code,{children:"AsDocuments()"})," was used, the execution method will contain the entity type of ",(0,r.jsx)(i.code,{children:"Document"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"For simplicity, this document covers only regular version of execution methods."}),"\n",(0,r.jsx)(i.h3,{id:"execute",children:"ExecuteAsync"}),"\n",(0,r.jsx)(i.p,{children:"Executes the DeleteItem operation."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"Task ExecuteAsync(CancellationToken cancellationToken = default);\n"})}),"\n",(0,r.jsx)(i.h4,{id:"execute-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"cancellationToken"}),": Token that can be used to cancel the task."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"execute-example",children:"Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"await builder.ExecuteAsync();\n"})}),"\n",(0,r.jsx)(i.h3,{id:"toitem",children:"ToItemAsync"}),"\n",(0,r.jsx)(i.p,{children:"Executes the DeleteItem operation and returns the item before the deletion."}),"\n",(0,r.jsxs)(i.p,{children:["The item is returned as it appeared before the DeleteItem operation, but only if ",(0,r.jsx)(i.a,{href:"#withreturnvalues",children:(0,r.jsx)(i.code,{children:"WithReturnValues"})})," with ",(0,r.jsx)(i.code,{children:"ReturnValues.AllOld"})," was specified in the request chain.\nOtherwise, ",(0,r.jsx)(i.code,{children:"null"})," is returned."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"Task<TEntity?> ToItemAsync(CancellationToken cancellationToken = default);\n"})}),"\n",(0,r.jsx)(i.h4,{id:"toitem-parameters",children:"Parameters"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"cancellationToken"}),": Token that can be used to cancel the task."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"toitem-example",children:"Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"var item = await builder.ToItemAsync();\n"})}),"\n",(0,r.jsx)(i.h3,{id:"toresponse",children:"ToResponseAsync"}),"\n",(0,r.jsxs)(i.p,{children:["Executes the DeleteItem operation and returns the deserialized response.\nBesides the item, this response contains ",(0,r.jsx)(i.code,{children:"ConsumedCapacity"})," property if ",(0,r.jsx)(i.a,{href:"#withreturnconsumedcapacity",children:(0,r.jsx)(i.code,{children:"WithReturnConsumedCapacity"})})," was used."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"Task<DeleteItemEntityResponse<TEntity>> ToResponseAsync(CancellationToken cancellationToken = default);\n"})}),"\n",(0,r.jsx)(i.h4,{id:"toresponse-example",children:"Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-csharp",children:"var response = await builder.ToResponseAsync();\nvar item = response.Item;\nvar consumedCapacity = response.ConsumedCapacity;\n"})})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},5404:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>a});var t=n(6672);const r={},l=t.createContext(r);function s(e){const i=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(l.Provider,{value:i},e.children)}}}]);