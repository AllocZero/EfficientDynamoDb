"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9461],{1614:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"dev_guide/getting-started","title":"Getting started","description":"Installation","source":"@site/docs/dev_guide/getting-started.md","sourceDirName":"dev_guide","slug":"/dev-guide/getting-started","permalink":"/EfficientDynamoDb/docs/dev-guide/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/alloczero/EfficientDynamoDb/edit/main/website/docs/dev_guide/getting-started.md","tags":[],"version":"current","frontMatter":{"id":"getting-started","title":"Getting started","slug":"../dev-guide/getting-started"},"sidebar":"someSidebar","previous":{"title":"Design Principles","permalink":"/EfficientDynamoDb/docs/design"},"next":{"title":"Region management","permalink":"/EfficientDynamoDb/docs/dev-guide/configuration/region-endpoint"}}');var a=t(3420),r=t(5404);const s={id:"getting-started",title:"Getting started",slug:"../dev-guide/getting-started"},o=void 0,c={},d=[{value:"Installation",id:"installation",level:2},{value:"Initializing DynamoDbContext",id:"initializing-dynamodbcontext",level:2},{value:"Region",id:"region",level:2},{value:"Credentials",id:"credentials",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsxs)(n.p,{children:["To get started, install the ",(0,a.jsx)(n.a,{href:"https://www.nuget.org/packages/EfficientDynamoDb",children:"EfficientDynamoDb nuget package"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"initializing-dynamodbcontext",children:"Initializing DynamoDbContext"}),"\n",(0,a.jsxs)(n.p,{children:["All requests to DynamoDB in EfficientDynamoDb are done through ",(0,a.jsx)(n.code,{children:"DynamoDbContext"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"First, add the following usings:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"using EfficientDynamoDb;\nusing EfficientDynamoDb.Configs;\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Then you can create a ",(0,a.jsx)(n.code,{children:"DynamoDbContext"})," like that:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'var accessKey = Environment.GetEnvironmentVariable("accessKeyVariable");\nvar secretKey = Environment.GetEnvironmentVariable("secretKeyVariable");\n\nvar credentials = new AwsCredentials(accessKey, secretKey);\n\nvar config = new DynamoDbContextConfig(RegionEndpoint.USEast1, credentials);\nvar context = new DynamoDbContext(config);\n'})}),"\n",(0,a.jsxs)(n.p,{children:["As you see, there are two main requirements to create the context: ",(0,a.jsx)(n.code,{children:"RegionEndpoint"})," and ",(0,a.jsx)(n.code,{children:"AwsCredentials"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Optionally, you can set the table name prefix, HTTP client factory, and retry strategies:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'var config = new DynamoDbContextConfig(RegionEndpoint.USEast1, credentials)\n{\n    TableNamePrefix = "your_prefix",\n    HttpClientFactory = yourFactory\n};\nconfig.RetryStrategies.ThrottlingStrategy = DefaultRetryStrategy.Instance;\n'})}),"\n",(0,a.jsxs)(n.p,{children:["For more info about retry strategies and possible options, check the ",(0,a.jsx)(n.a,{href:"/EfficientDynamoDb/docs/dev-guide/configuration/retry-strategies",children:"retry strategies guide"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"region",children:"Region"}),"\n",(0,a.jsx)(n.p,{children:"AWS Region selection allows you to access DynamoDb in a specific geographic region.\nIt can be useful for redundancy and to keep your data and applications running close to where you and your users access them."}),"\n",(0,a.jsxs)(n.p,{children:["The simplest way to get ",(0,a.jsx)(n.code,{children:"RegionEndpoint"})," is to use static property like ",(0,a.jsx)(n.code,{children:"RegionEndpoint.USEast1"}),".\nLearn more about ways to create ",(0,a.jsx)(n.code,{children:"RegionEndpoint"})," in our ",(0,a.jsx)(n.a,{href:"/EfficientDynamoDb/docs/dev-guide/configuration/region-endpoint",children:"how-to guide"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"credentials",children:"Credentials"}),"\n",(0,a.jsxs)(n.p,{children:["Natively, EfficientDynamoDb supports direct creation of ",(0,a.jsx)(n.a,{href:"https://github.com/AllocZero/EfficientDynamoDb/blob/main/src/EfficientDynamoDb/Configs/AwsCredentials.cs",children:"AwsCredentials"})," instance via constructor."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Important note:"})," Never put your credentials as plain text in your code! Use some secure storage instead."]}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'var accessKey = Environment.GetEnvironmentVariable("accessKeyVariable");\nvar secretKey = Environment.GetEnvironmentVariable("secretKeyVariable");\n\nvar credentials = new AwsCredentials(accessKey, secretKey);\n'})}),"\n",(0,a.jsxs)(n.p,{children:["If you want to use token authentication, you can pass it to the ",(0,a.jsx)(n.code,{children:"AwsCredentials"})," constructor as well:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'var accessKey = Environment.GetEnvironmentVariable("accessKeyVariable");\nvar secretKey = Environment.GetEnvironmentVariable("secretKeyVariable");\nvar token = "YourToken";\n\nvar credentials = new AwsCredentials(accessKey, secretKey, token);\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Additionally, you can use all authentication methods from .NET AWS SDK via our ",(0,a.jsx)(n.a,{href:"https://www.nuget.org/packages/EfficientDynamoDb.Credentials.AWSSDK/",children:"credentials compatibility package"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["For more info, refer to our guide to ",(0,a.jsx)(n.a,{href:"/EfficientDynamoDb/docs/dev-guide/configuration/credentials",children:"credentials management in EfficientDynamoDb"})]})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},5404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(6672);const a={},r=i.createContext(a);function s(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);