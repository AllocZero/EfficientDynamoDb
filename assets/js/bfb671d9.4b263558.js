"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[873],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),u=r,y=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return n?a.createElement(y,o(o({ref:t},p),{},{components:n})):a.createElement(y,o({ref:t},p))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3335:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={id:"transact",title:"Transactions",slug:"../../dev-guide/high-level/transact"},o=void 0,l={unversionedId:"dev_guide/high_level/transact",id:"dev_guide/high_level/transact",title:"Transactions",description:"DynamoDB provides two transactional operations:",source:"@site/docs/dev_guide/high_level/transact.md",sourceDirName:"dev_guide/high_level",slug:"/dev-guide/high-level/transact",permalink:"/EfficientDynamoDb/docs/dev-guide/high-level/transact",draft:!1,editUrl:"https://github.com/alloczero/EfficientDynamoDb/edit/main/website/docs/dev_guide/high_level/transact.md",tags:[],version:"current",frontMatter:{id:"transact",title:"Transactions",slug:"../../dev-guide/high-level/transact"},sidebar:"someSidebar",previous:{title:"Batch Operations",permalink:"/EfficientDynamoDb/docs/dev-guide/high-level/batch"},next:{title:"Converters",permalink:"/EfficientDynamoDb/docs/dev-guide/high-level/converters"}},s={},c=[{value:"TransactGetItems",id:"transactgetitems",level:2},{value:"TransactWriteItems",id:"transactwriteitems",level:2}],p={toc:c},m="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"DynamoDB provides two transactional operations:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TransactGetItems")," - Atomically read multiple items from one or more tables."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TransactWriteItems")," -  Atomically modify multiple items in one or more tables.")),(0,r.kt)("p",null,"Both operations throw ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionCanceledException")," when transaction is rejected.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"CancellationReasons")," property can be used to find out the reason behind the rejection."),(0,r.kt)("h2",{id:"transactgetitems"},"TransactGetItems"),(0,r.kt)("p",null,"Atomically retrieves up to 25 items from one or more tables within the same AWS account and Region."),(0,r.kt)("p",null,"Each entity primary key is configured using ",(0,r.kt)("inlineCode",{parentName:"p"},"Transact.GetItem")," factory method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var items = await context.TransactGet()\n    .WithItems(\n        Transact.GetItem<EntityClass>().WithPrimaryKey("partitionKey", "sortKey_1"),\n        Transact.GetItem<EntityClass>().WithPrimaryKey("partitionKey", "sortKey_2")\n    )\n    .ToListAsync<MixedEntity>()\n')),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Entities of different type can be retrieved by using ",(0,r.kt)("inlineCode",{parentName:"em"},"AsDocuments()")," method the same way as for other read operations.")),(0,r.kt)("h2",{id:"transactwriteitems"},"TransactWriteItems"),(0,r.kt)("p",null,"Atomically applies one of four operations per item within the same AWS account and Region (up to 25 operations):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Transact.PutItem")," - applies a ",(0,r.kt)("a",{parentName:"li",href:"/EfficientDynamoDb/docs/dev-guide/high-level/write#putitem"},"PutItem")," operation."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Transact.UpdateItem")," - applies an ",(0,r.kt)("a",{parentName:"li",href:"/EfficientDynamoDb/docs/dev-guide/high-level/write#update"},"UpdateItem")," operation."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Transact.DeleteItem")," - applies a ",(0,r.kt)("a",{parentName:"li",href:"/EfficientDynamoDb/docs/dev-guide/high-level/write#delete"},"DeleteItem")," operation."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Transact.ConditionCheck")," - applies a condition to an item which is not modified by the transaction.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'await context.TransactWrite()\n    .WithClientRequestToken(idempotencyKey)\n    .WithItems(\n        Transact.PutItem(new UserEmailEntity("test@test.com")),\n        Transact.ConditionCheck<UserEntity>()\n            .WithPrimaryKey("partitionKey", "sortKey")\n            .WithCondition(Condition<UserEntity>.On(x => x.Verified).EqualTo(false))\n    )\n    .ExecuteAsync();\n')))}d.isMDXComponent=!0}}]);