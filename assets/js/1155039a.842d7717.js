"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[228],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),f=c(n),p=a,m=f["".concat(s,".").concat(p)]||f[p]||u[p]||r;return n?i.createElement(m,o(o({ref:t},d),{},{components:n})):i.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[f]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=n(7462),a=(n(7294),n(3905));const r={id:"credentials",title:"Credentials management",slug:"../../dev-guide/configuration/credentials"},o=void 0,l={unversionedId:"dev_guide/configuration/credentials",id:"dev_guide/configuration/credentials",title:"Credentials management",description:"There are two main ways to pass credentials to EfficientDynamoDb:",source:"@site/docs/dev_guide/configuration/credentials.md",sourceDirName:"dev_guide/configuration",slug:"/dev-guide/configuration/credentials",permalink:"/EfficientDynamoDb/docs/dev-guide/configuration/credentials",draft:!1,editUrl:"https://github.com/alloczero/EfficientDynamoDb/edit/main/website/docs/dev_guide/configuration/credentials.md",tags:[],version:"current",frontMatter:{id:"credentials",title:"Credentials management",slug:"../../dev-guide/configuration/credentials"},sidebar:"someSidebar",previous:{title:"Region management",permalink:"/EfficientDynamoDb/docs/dev-guide/configuration/region-endpoint"},next:{title:"Retry Strategies",permalink:"/EfficientDynamoDb/docs/dev-guide/configuration/retry-strategies"}},s={},c=[{value:"Using native credential entities",id:"using-native-credential-entities",level:2},{value:"Using credentials flow from the official .NET AWS SDK",id:"using-credentials-flow-from-the-official-net-aws-sdk",level:2},{value:"Automatic credentials resolution",id:"automatic-credentials-resolution",level:3}],d={toc:c},f="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(f,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"There are two main ways to pass credentials to EfficientDynamoDb:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Using native credential entities."),(0,a.kt)("li",{parentName:"ol"},"Using credentials flow from the official .NET AWS SDK.")),(0,a.kt)("p",null,"By default, EfficientDynamoDb uses its own credential entities.\nHowever, sometimes it's beneficial to use credentials flow from the official .NET AWS SDK.\nE.g., you have complex credentials retrieving patterns that are not supported by EfficientDynamoDb natively yet, or you prefer using battle-tested code for such critical pieces as credentials management."),(0,a.kt)("h2",{id:"using-native-credential-entities"},"Using native credential entities"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"AwsCredentials")," requires passing access and secret keys directly in the constructor."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Important note:")," Never put your credentials as plain text in your code! Use some secure storage instead."),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'var accessKey = Environment.GetEnvironmentVariable("accessKeyVariable");\nvar secretKey = Environment.GetEnvironmentVariable("secretKeyVariable");\n\nvar credentials = new AwsCredentials(accessKey, secretKey);\n')),(0,a.kt)("p",null,"If you want to use token authentication, you can pass it to the ",(0,a.kt)("inlineCode",{parentName:"p"},"AwsCredentials")," constructor as well:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'var accessKey = Environment.GetEnvironmentVariable("accessKeyVariable");\nvar secretKey = Environment.GetEnvironmentVariable("secretKeyVariable");\nvar token = "YourToken";\n\nvar credentials = new AwsCredentials(accessKey, secretKey, token);\n')),(0,a.kt)("h2",{id:"using-credentials-flow-from-the-official-net-aws-sdk"},"Using credentials flow from the official .NET AWS SDK"),(0,a.kt)("p",null,"To integrate official ",(0,a.kt)("inlineCode",{parentName:"p"},"Amazon.Runtime.AWSCredentials")," objects follow this simple steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install the ",(0,a.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/EfficientDynamoDb.Credentials.AWSSDK/"},"EfficientDynamoDb.Credentials.AWSSDK nuget package")),(0,a.kt)("li",{parentName:"ol"},"Use extension method ",(0,a.kt)("inlineCode",{parentName:"li"},"ToCredentialsProvider()")," to convert ",(0,a.kt)("inlineCode",{parentName:"li"},"AWSCredentials")," into the ",(0,a.kt)("inlineCode",{parentName:"li"},"IAwsCredentialsProvider")," which is accepted by ",(0,a.kt)("inlineCode",{parentName:"li"},"DynamoDbContextConfig"),".")),(0,a.kt)("p",null,"The following example shows how to convert ",(0,a.kt)("inlineCode",{parentName:"p"},"EnvironmentVariablesAWSCredentials")," from the .NET AWS SDK to ",(0,a.kt)("inlineCode",{parentName:"p"},"IAwsCredentialsProvider")," accepted by EfficientDynamoDb."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// AWS SDK credentials class\nvar awsSdkCredentials = new EnvironmentVariablesAWSCredentials(); \n\n// EfficientDynamoDb credentials\nvar effDdbCredentials = awsSdkCredentials.ToCredentialsProvider();\n\n// EfficientDynamoDb context config\nvar config = new DynamoDbContextConfig(RegionEndpoint.USEast1, effDdbCredentials);\n")),(0,a.kt)("h3",{id:"automatic-credentials-resolution"},"Automatic credentials resolution"),(0,a.kt)("p",null,"One of the common use-cases with the official SDK is to rely on authomatic credentials resolution:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"var client = new AmazonDynamoDBClient();\nvar context = new DynamoDBContext(client);\n")),(0,a.kt)("p",null,"This behavior is achievable using the ",(0,a.kt)("inlineCode",{parentName:"p"},"FallbackCredentialsFactory")," from the official SDK and compatibility extension method:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"var awsSdkCredentials = FallbackCredentialsFactory.GetCredentials();\n\n// EfficientDynamoDb credentials\nvar effDdbCredentials = awsSdkCredentials.ToCredentialsProvider();\n\n// EfficientDynamoDb context config\nvar config = new DynamoDbContextConfig(RegionEndpoint.USEast1, effDdbCredentials);\n")))}u.isMDXComponent=!0}}]);