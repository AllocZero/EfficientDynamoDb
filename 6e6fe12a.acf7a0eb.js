(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{113:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=i.a.createContext({}),p=function(e){var t=i.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return i.a.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),b=r,m=d["".concat(o,".").concat(b)]||d[b]||s[b]||a;return n?i.a.createElement(m,c(c({ref:t},u),{},{components:n})):i.a.createElement(m,c({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var u=2;u<a;u++)o[u]=n[u];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},88:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),i=n(7),a=(n(0),n(113)),o={id:"write",title:"Writing Data",slug:"../dev-guide/high-level/write"},c={unversionedId:"dev_guide/high_level/write",id:"dev_guide/high_level/write",isDocsHomePage:!1,title:"Writing Data",description:"DynamoDB provides two primary operations for writing data:",source:"@site/docs/dev_guide/high_level/write.md",slug:"/dev_guide/dev-guide/high-level/write",permalink:"/EfficientDynamoDb/docs/dev_guide/dev-guide/high-level/write",editUrl:"https://github.com/alloczero/EfficientDynamoDb/edit/master/website/docs/dev_guide/high_level/write.md",version:"current",sidebar:"someSidebar",previous:{title:"Reading Data",permalink:"/EfficientDynamoDb/docs/dev_guide/dev-guide/high-level/read"},next:{title:"Batch",permalink:"/EfficientDynamoDb/docs/dev_guide/dev-guide/high-level/batch"}},l=[{value:"PutItem",id:"putitem",children:[]},{value:"Update",id:"update",children:[]}],u={toc:l};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"DynamoDB provides two primary operations for writing data:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"PutItem")," - Create a new item, or replace an old item with a new item."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"Update")," - Add or update specific attributes of an item.")),Object(a.b)("p",null,"DynamoDB also supports a ",Object(a.b)("inlineCode",{parentName:"p"},"BatchWriteItem")," operation for executing up to 25 ",Object(a.b)("inlineCode",{parentName:"p"},"PutItem")," operations in a single request.\nIt's covered in ",Object(a.b)("a",{parentName:"p",href:"/EfficientDynamoDb/docs/dev_guide/dev-guide/high-level/batch"},"batch operations guide"),"."),Object(a.b)("h2",{id:"putitem"},"PutItem"),Object(a.b)("p",null,"Creates a new item, or replaces an old item with a new item.\nIf an item that has the same primary key as the new item already exists in the specified table, the new item completely replaces the existing item."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-csharp"},'await ddbContext.PutItemAsync(new UserEntity("John", "Doe"));\n')),Object(a.b)("p",null,"Using the fluent API, you can perform a conditional put operation.\nE.g., add a new item if one with the specified primary key doesn't exist, or replace an existing item if it has certain attribute values."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-csharp"},'await ddbContext.PutItem()\n    .WithItem(new UserEntity("John", "Doe"))\n    .WithCondition(Condition<UserEntity>.On(x => x.Pk).NotExists())\n    .ExecuteAsync();\n')),Object(a.b)("p",null,"You can return the item's attribute values in the same operation by setting ",Object(a.b)("inlineCode",{parentName:"p"},"ReturnValues")," in fluent API.\nIt might be useful if you want to know the item's state before or after the save.\n",Object(a.b)("inlineCode",{parentName:"p"},"ReturnValues")," enum contains many options but only ",Object(a.b)("inlineCode",{parentName:"p"},"None"),", ",Object(a.b)("inlineCode",{parentName:"p"},"AllOld"),", and ",Object(a.b)("inlineCode",{parentName:"p"},"AllNew")," are supported by ",Object(a.b)("inlineCode",{parentName:"p"},"PutItem")," operation."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-csharp"},'var item = await ddbContext.PutItem()\n    .WithItem(new UserEntity("John", "Doe"))\n    .WithReturnValues(ReturnValues.AllOld)\n    .ToEntityAsync();\n')),Object(a.b)("p",null,"For more info, check the detailed ",Object(a.b)("a",{parentName:"p",href:"/EfficientDynamoDb/docs/api-reference/put-item"},"PutItem API reference")),Object(a.b)("h2",{id:"update"},"Update"),Object(a.b)("p",null,"TBD"))}p.isMDXComponent=!0}}]);